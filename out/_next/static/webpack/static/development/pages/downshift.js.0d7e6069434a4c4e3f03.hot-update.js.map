{"version":3,"file":"static/webpack/static/development/pages/downshift.js.0d7e6069434a4c4e3f03.hot-update.js","sources":["webpack:///./pages/downshift.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\"\nimport styled from \"styled-components\"\n\nimport ContentContainer from \"../components/ContentContainer\"\nimport PlacePicker from \"../components/PlacePicker\"\nimport DatePicker from \"../components/DatePicker\"\nimport Interests from \"../components/Interests\"\nimport Debug from \"../components/debug\"\nimport useOnClickOutside from \"../components/useOnClickOutside\"\nimport PlacesToVisit from \"../components/PlacesToVisit\"\n\nconst NomadForm = styled.div`\n  max-width: 696px;\n`\n\nconst StyledOrigin = styled.div`\n  max-width: 640px;\n`\n\nconst TopPart = () => {\n  const [tripFrom, setFrom] = useState(\"Czech Republic\")\n  const [tripTo, setDestination] = useState(null)\n\n  const [showDestination, setDestinationVisibility] = useState(false)\n  const [showReturnDate, setReturnDateVisibility] = useState(false)\n\n  const [selectedDate, setDate] = useState(null)\n  const [returnDate, setReturnDate] = useState(null)\n  const [datePickerOpened, setDatePickerVisibility] = useState(false)\n\n  const selectDate = date => {\n    setDate(date.date)\n    setDatePickerVisibility(false)\n  }\n\n  const openDatePicker = () => setDatePickerVisibility(true)\n\n  return (\n    <Stack spaceAfter=\"largest\">\n      <Stack direction=\"row\">\n        <PlacePicker\n          label=\"From\"\n          defaultValue={tripFrom}\n          onChange={setFrom}\n        />\n        <DatePicker\n          label=\"Departure\"\n          onFocus={openDatePicker}\n          // TODO: onBlur or clickOutside ref\n          // onBlur={closeDatePicker}\n          shown={datePickerOpened}\n          currentDate={selectedDate}\n          onDateSelected={selectDate}\n        />\n      </Stack>\n      {(showDestination || showReturnDate) && (\n        <Stack direction=\"row\">\n          {showDestination && (\n            <PlacePicker\n              label=\"To\"\n              defaultValue={tripTo}\n              onChange={setDestination}\n            />\n          )}\n          {showReturnDate && (\n            <DatePicker\n              label=\"Arrival\"\n              onFocus={openDatePicker}\n              // TODO: onBlur or clickOutside ref\n              // onBlur={closeDatePicker}\n              shown={datePickerOpened}\n              currentDate={selectedDate}\n              onDateSelected={selectDate}\n            />\n          )}\n        </Stack>\n      )}\n      <Stack direction=\"row\">\n        <Checkbox\n          label=\"Return to origin\"\n          checked={!showDestination}\n          onChange={e => {\n            setDestinationVisibility(!e.target.checked)\n          }}\n        />\n        <Checkbox\n          label=\"Set return date\"\n          checked={!showReturnDate}\n          onChange={e => {\n            setReturnDateVisibility(!e.target.checked)\n          }}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n\nconst DownShift = () => (\n  <>\n    <ContentContainer>\n      <Heading type=\"title1\" spaceAfter=\"largest\">\n        What are you interested in?\n      </Heading>\n      <Interests />\n      <NomadForm>\n        <StyledOrigin>\n          <Heading type=\"title1\" spaceAfter=\"largest\">\n            What destinations do you want to visit?\n          </Heading>\n          <TopPart />\n        </StyledOrigin>\n        <PlacesToVisit />\n      </NomadForm>\n    </ContentContainer>\n  </>\n)\n\nexport default DownShift\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AAJA;AAKA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AAJA;AAKA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AACA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}