{"version":3,"file":"static/webpack/static/development/pages/downshift.js.5d213d0598596c4f4bb4.hot-update.js","sources":["webpack:///./pages/downshift.js"],"sourcesContent":["import { useState, useRef } from \"react\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\"\nimport styled from \"styled-components\"\nimport { format, addDays } from \"date-fns\"\nimport Router from \"next/router\"\n\nimport ContentContainer from \"../components/ContentContainer\"\nimport PlacePicker from \"../components/PlacePickerLocations\"\nimport DatePicker from \"../components/DatePicker\"\nimport Interests from \"../components/Interests\"\nimport useOnClickOutside from \"../components/useOnClickOutside\"\nimport PlacesToVisit from \"../components/PlacesToVisit\"\nimport Stepper from \"../components/Stepper\"\nimport useUrl from \"../components/useUrl\"\n\nconst NomadForm = styled.div`\n  max-width: 696px;\n`\n\nconst StyledOrigin = styled.div`\n  max-width: 640px;\n`\n\nconst defaultValues = {\n  adults: 2,\n  interest: \"gastronomy\",\n  flyFrom: { id: \"brno_cz\", name: \"Brno\" },\n  dateFrom: new Date(),\n  places: [[{ name: \"Italy\", id: \"IT\", code: \"IT\" }, [2, 5]]]\n}\n\nconst TopPart = ({ flyFrom, flyTo, dateFrom, dateTo, adults }) => {\n  const [tripFrom, setFrom] = useUrl(\n    flyFrom || defaultValues.flyFrom,\n    \"flyFrom\",\n    item => item.id\n  )\n  const [tripAdults, setAdults] = useUrl(adults, \"adults\")\n\n  const [showDestination, setDestinationVisibility] = useState(\n    Boolean(flyTo)\n  )\n  const [tripTo, setDestination] = useUrl(flyTo, \"flyTo\", item =>\n    item ? item.id : undefined\n  )\n\n  const [showReturnDate, setReturnDateVisibility] = useState(\n    Boolean(dateTo)\n  )\n  const [departureDate, setDepartureDate] = useUrl(\n    dateFrom ? new Date(dateFrom) : defaultValues.dateFrom,\n    \"dateFrom\",\n    date => format(date, \"YYYY-MM-DD\")\n  )\n  const [\n    departureDatePickerOpened,\n    setDepartureDatePickerVisibility\n  ] = useState(false)\n\n  const [returnDate, setReturnDate] = useUrl(\n    dateTo ? new Date(dateTo) : addDays(new Date(), 10),\n    \"dateTo\",\n    date => (date ? format(date, \"YYYY-MM-DD\") : undefined)\n  )\n  const [\n    returnDatePickerOpened,\n    setReturnDatePickerVisibility\n  ] = useState(false)\n\n  const selectDepartureDate = date => {\n    setDepartureDate(date.date)\n    setDepartureDatePickerVisibility(false)\n  }\n\n  const selectReturnDate = date => {\n    setReturnDate(date.date)\n    setReturnDatePickerVisibility(false)\n  }\n\n  const departureDatepickerRef = useRef()\n  useOnClickOutside(departureDatepickerRef, () =>\n    setDepartureDatePickerVisibility(false)\n  )\n\n  const returnDatepickerRef = useRef()\n  useOnClickOutside(returnDatepickerRef, () =>\n    setReturnDatePickerVisibility(false)\n  )\n\n  return (\n    <Stack spaceAfter=\"largest\">\n      <Stack direction=\"row\" justify=\"end\">\n        <Stack basis=\"calc(25% - 16px)\" shrink={false} grow={false}>\n          <Stepper\n            min={1}\n            max={20}\n            defaultValue={tripAdults}\n            onChange={setAdults}\n          />\n        </Stack>\n      </Stack>\n      <Stack direction=\"row\">\n        <PlacePicker\n          label=\"From\"\n          defaultValue={tripFrom}\n          onChange={setFrom}\n        />\n        <DatePicker\n          openRef={departureDatepickerRef}\n          label=\"Departure\"\n          onFocus={() => setDepartureDatePickerVisibility(true)}\n          shown={departureDatePickerOpened}\n          currentDate={departureDate}\n          onDateSelected={selectDepartureDate}\n        />\n      </Stack>\n      {(showDestination || showReturnDate) && (\n        <Stack direction=\"row\">\n          {showDestination && (\n            <PlacePicker\n              label=\"To\"\n              defaultValue={tripTo}\n              onChange={setDestination}\n            />\n          )}\n          {showReturnDate && (\n            <DatePicker\n              openRef={returnDatepickerRef}\n              label=\"Arrival\"\n              onFocus={() => setReturnDatePickerVisibility(true)}\n              shown={returnDatePickerOpened}\n              currentDate={returnDate}\n              onDateSelected={selectReturnDate}\n            />\n          )}\n        </Stack>\n      )}\n      <Stack direction=\"row\">\n        <Checkbox\n          label=\"Return to origin\"\n          checked={!showDestination}\n          onChange={e => {\n            setDestinationVisibility(!e.target.checked)\n            setDestination(null)\n          }}\n        />\n        <Checkbox\n          label=\"Set return date\"\n          checked={showReturnDate}\n          onChange={e => {\n            setReturnDateVisibility(e.target.checked)\n            setReturnDate(null)\n          }}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n\nconst placesToUrl = places =>\n  places\n    .map(([place, days]) => [place && place.code, days])\n    .toString()\n    .replace(/,/g, \"-\")\n\nconst changePlacesState = newPlaces => {\n  const newUrl = {\n    pathname: Router.pathname,\n    query: {\n      ...Router.query,\n      places: placesToUrl(newPlaces)\n    }\n  }\n  // eslint-disable-next-line fp/no-mutating-methods\n  Router.push(newUrl, newUrl, { shallow: true })\n}\n\nconst getPlaceFromString = val =>\n  typeof val === \"string\"\n    ? { name: `[${val}]`, code: val, id: val }\n    : val\n\n// Mexico,2,5,Poland,1,3 => [[\"Mexico\", defaultDays]]\nconst UrlToPlaces = url => {\n  if (!url) return undefined\n  const items = url.split(\"-\")\n  const result = []\n  // eslint-disable-next-line\n  for (let i = 0; i < items.length; i += 3)\n    // eslint-disable-next-line fp/no-mutating-methods\n    result.push([\n      getPlaceFromString(items[i]),\n      [items[i + 1], items[i + 2]]\n    ])\n  return result\n}\n\nconst FlyForm = ({ query, places }) => (\n  <ContentContainer>\n    <Heading type=\"title1\" spaceAfter=\"largest\">\n      What are you interested in?\n    </Heading>\n    <Interests\n      defaultValue={query.interest || defaultValues.interest}\n    />\n    <NomadForm>\n      <StyledOrigin>\n        <Heading type=\"title1\" spaceAfter=\"largest\">\n          What destinations do you want to visit?\n        </Heading>\n        <TopPart\n          {...query}\n          adults={query.adults || defaultValues.adults}\n          flyFrom={getPlaceFromString(query.flyFrom)}\n          flyTo={getPlaceFromString(query.flyTo)}\n        />\n      </StyledOrigin>\n      <PlacesToVisit\n        onChange={changePlacesState}\n        defaultValue={places}\n        onSearchClick={selectedPlaces => {\n          const values = { ...defaultValues, ...Router.query }\n          const newUrl = {\n            pathname: \"/result\",\n            query: {\n              ...values,\n              dateFrom: format(\n                new Date(values.dateFrom),\n                \"DD/MM/YYYY\"\n              ),\n              flyFrom:\n                typeof values.flyFrom === \"string\"\n                  ? values.flyFrom\n                  : values.flyFrom.id,\n              dateTo:\n                values.dateTo &&\n                format(new Date(values.dateTo), \"DD/MM/YYYY\"),\n              stopovers: placesToUrl(selectedPlaces),\n              places: undefined\n            }\n          }\n          Router.push(newUrl) // eslint-disable-line\n        }}\n      />\n    </NomadForm>\n  </ContentContainer>\n)\n\nFlyForm.getInitialProps = async ({ req, query }) => {\n  const places = UrlToPlaces(query.places) || defaultValues.places\n  return { query, places }\n}\n\nexport default FlyForm\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AAAA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAqBA;AAAA;AArBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AA+BA;AAAA;AA/BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqdA;AAFA;AAmBA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AACA;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}