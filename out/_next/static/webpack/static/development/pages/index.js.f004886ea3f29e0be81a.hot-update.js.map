{"version":3,"file":"static/webpack/static/development/pages/index.js.f004886ea3f29e0be81a.hot-update.js","sources":["webpack:///./components/PlacesToVisit.js","webpack:///./pages/index.js"],"sourcesContent":["import { useState, useRef, useReducer } from \"react\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport CloseCircle from \"@kiwicom/orbit-components/lib/icons/CloseCircle\"\nimport Plus from \"@kiwicom/orbit-components/lib/icons/Plus\"\nimport Search from \"@kiwicom/orbit-components/lib/icons/Search\"\nimport styled from \"styled-components\"\n\nimport PlacePicker from \"./PlacePickerLocations\"\nimport Slider from \"./Slider\"\nimport Debug from \"./debug\"\nimport useOnClickOutside from \"./useOnClickOutside\"\n\nconst StyledButtons = styled.div`\n  max-width: 756px;\n`\n\nconst PlaceToVisit = ({\n  place,\n  changePlace,\n  days = [2, 8],\n  changeDays,\n  onRemoveClick\n}) => {\n  // const [tripFrom, setFrom] = useState(place)\n  const [tripDays, setDaysState] = useState(days)\n\n  const setDays = daysChanged => {\n    setDaysState(daysChanged)\n    if (changeDays) changeDays(daysChanged)\n  }\n\n  // Create a ref that we add to the element for which we want to detect outside clicks\n  const ref = useRef()\n  // State for our slider\n  const [isOpenSlider, setSliderVisibility] = useState(false)\n  // Call hook passing in the ref and a function to call on outside click\n  useOnClickOutside(ref, () => setSliderVisibility(false))\n  return (\n    <Stack direction=\"row\">\n      <PlacePicker defaultValue={place && place.id} onChange={changePlace} />\n      <Slider\n        openRef={ref}\n        isOpen={isOpenSlider}\n        onFocus={() => setSliderVisibility(true)}\n        defaultValues={tripDays}\n        onChange={(from, to) => setDays([from, to])}\n      />\n      <Button\n        type=\"secondary\"\n        iconLeft={<CloseCircle />}\n        disabled={!onRemoveClick}\n        onClick={onRemoveClick}\n      />\n    </Stack>\n  )\n}\n\nconst defaultDays = [2, 5]\n\nfunction reducer(places, { type, payload }) {\n  const newPlaces = places && places.concat()\n  switch (type) {\n    case \"reset\":\n      return payload || [[\"Australia\", defaultDays]]\n    case \"addPlace\":\n      return places.concat([[null, [1, 3]]])\n    case \"removePlace\":\n      return places.filter((val, index) => index !== payload.index)\n    case \"changeDays\":\n      newPlaces[payload.index][1] = payload.days\n      return newPlaces\n    case \"changePlace\":\n      newPlaces[payload.index][0] = payload.place\n      return newPlaces\n    default:\n      // A reducer must always return a valid state.\n      // Alternatively you can throw an error if an invalid action is dispatched.\n      return places\n  }\n}\n\nconst logReducer = (fn, logger) =>\n  // eslint-disable-next-line func-names\n  function() {\n    // eslint-disable-next-line\n    const before = arguments[0]\n    // eslint-disable-next-line\n    const result = fn(...arguments) // fn.apply(null, arguments)\n    if (logger && before !== result) logger(result)\n    return result\n  }\n\nconst PlacesToVisit = ({\n  defaultValue = [[\"Mexico\", defaultDays]],\n  onChange = state => console.log(\"new places to visit\", state),\n  onSearchClick,\n  showDebug = false\n}) => {\n  const loggReducer = logReducer(reducer, onChange)\n  const [places, dispatch] = useReducer(loggReducer, defaultValue, {\n    type: \"reset\",\n    payload: defaultValue\n  })\n  const action = (type, payload) => dispatch({ type, payload })\n  const removePlace = index => () => action(\"removePlace\", { index })\n  const changeDays = index => days =>\n    action(\"changeDays\", { index, days })\n  const changePlace = index => place =>\n    action(\"changePlace\", { index, place })\n  return (\n    <>\n      <Heading type=\"title2\" spaceAfter=\"medium\">\n        Places to visit\n      </Heading>\n      <Stack spaceAfter=\"medium\">\n        {places.map(([place, days], i) => (\n          <PlaceToVisit\n            onRemoveClick={i !== 0 ? removePlace(i) : undefined}\n            place={place}\n            days={days}\n            // eslint-disable-next-line\n            key={i}\n            changeDays={changeDays(i)}\n            changePlace={changePlace(i)}\n          />\n        ))}\n      </Stack>\n      <StyledButtons>\n        <Stack direction=\"row\">\n          <Button\n            type=\"secondary\"\n            iconLeft={<Plus />}\n            block\n            disabled={!places[places.length - 1][0]}\n            onClick={() => action(\"addPlace\")}\n          >\n            Add destination\n          </Button>\n          <Button\n            iconLeft={<Search />}\n            block\n            disabled={typeof onSearchClick !== \"function\"}\n            onClick={() => onSearchClick(places)}\n          >\n            Search\n          </Button>\n        </Stack>\n      </StyledButtons>\n\n      {showDebug && [<hr />, <Debug {...places} />]}\n    </>\n  )\n}\n\nexport default PlacesToVisit\n","import * as React from \"react\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport styled from \"styled-components\"\nimport { format } from \"date-fns\"\nimport Router from \"next/router\"\n\nimport ContentContainer from \"../components/ContentContainer\"\nimport Interests from \"../components/Interests\"\nimport PlacesToVisit from \"../components/PlacesToVisit\"\nimport TopPart, { defaultValues } from \"../components/TopPart\"\n\nconst NomadForm = styled.div`\n  max-width: 816px;\n`\n\nconst StyledOrigin = styled.div`\n  max-width: 756px;\n`\n\nconst placesToUrl = places =>\n  places\n    .map(([place, days]) => [place && place.code, days])\n    .toString()\n    .replace(/,/g, \"-\")\n\nconst changePlacesState = newPlaces => {\n  const newUrl = {\n    pathname: Router.pathname,\n    query: {\n      ...Router.query,\n      stopovers: placesToUrl(newPlaces)\n    }\n  }\n  // eslint-disable-next-line fp/no-mutating-methods\n  Router.push(newUrl, newUrl, { shallow: true })\n}\n\nconst getPlaceFromString = val =>\n  typeof val === \"string\"\n    ? { name: `[${val}]`, code: val, id: val }\n    : val\n\n// Mexico,2,5,Poland,1,3 => [[\"Mexico\", defaultDays]]\nconst UrlToPlaces = url => {\n  if (!url) return undefined\n  const items = url.split(\"-\")\n  const result = []\n  // eslint-disable-next-line\n  for (let i = 0; i < items.length; i += 3)\n    // eslint-disable-next-line fp/no-mutating-methods\n    result.push([\n      getPlaceFromString(items[i]),\n      [items[i + 1], items[i + 2]]\n    ])\n  return result\n}\n\nconst FlyForm = ({ query, places }) => (\n  <ContentContainer>\n    <Heading type=\"title1\" spaceAfter=\"largest\">\n      What are you interested in?\n    </Heading>\n    <Interests\n      defaultValue={query.interest || defaultValues.interest}\n    />\n    <NomadForm>\n      <StyledOrigin>\n        <Heading type=\"title1\" spaceAfter=\"medium\">\n          What destinations do you want to visit?\n        </Heading>\n        <TopPart\n          {...query}\n          adults={query.adults || defaultValues.adults}\n          flyFrom={query.flyFrom}\n          flyTo={query.flyTo}\n        />\n      </StyledOrigin>\n      <PlacesToVisit\n        onChange={changePlacesState}\n        defaultValue={places}\n        onSearchClick={selectedPlaces => {\n          const values = { ...defaultValues, ...Router.query }\n          const newUrl = {\n            pathname: `${BASE_URL}/result`,\n            query: {\n              ...values,\n              dateFrom: format(\n                new Date(values.dateFrom),\n                \"DD/MM/YYYY\"\n              ),\n              flyFrom:\n                typeof values.flyFrom === \"string\"\n                  ? values.flyFrom\n                  : values.flyFrom.id,\n              dateTo:\n                values.dateTo &&\n                format(new Date(values.dateTo), \"DD/MM/YYYY\"),\n              stopovers: placesToUrl(selectedPlaces),\n              places: undefined\n            }\n          }\n          Router.push(newUrl) // eslint-disable-line\n        }}\n      />\n    </NomadForm>\n  </ContentContainer>\n)\n\nFlyForm.getInitialProps = async ({ req, query }) => {\n  const places = UrlToPlaces(query.stopovers) || defaultValues.places\n  return { query, places }\n}\n\nexport default FlyForm\n"],"mappings":"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","sourceRoot":""}